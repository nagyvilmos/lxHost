/*==============================================================================
 * Lexa - Property of William Norman-Walker
 *------------------------------------------------------------------------------
 * HostMonitorFrame.java
 *------------------------------------------------------------------------------
 * Author:  William Norman-Walker
 * Created: February 2017
 *==============================================================================
 */
package lexa.core.host;

import java.awt.event.ActionEvent;
import javax.swing.JTextField;

/**
 *
 * @author william
 * @since 2017-02
 */
class HostMonitorFrame
        extends javax.swing.JFrame
        implements Runnable
{
    private final HostServer host;

    // Variables declaration - do not modify
    private javax.swing.JLabel connectionLabel;
    private javax.swing.JTextField connection;
    private javax.swing.JLabel inboundLabel;
    private javax.swing.JTextField inbound;
    private javax.swing.JLabel outboundLabel;
    private javax.swing.JTextField outbound;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField error;
    private javax.swing.JButton shutDown;
    private javax.swing.JButton refresh;
    // End of variables declaration


    /**
     * Creates new form HostMonitorFrame
     * @param host the host
     */
    HostMonitorFrame(HostServer host)
    {
        initComponents();
        this.host = host;
    }
    @Override
    public void run()
    {
        this.setVisible(true);
    }
    void start()
    {
        /* Display the form */
        java.awt.EventQueue.invokeLater(this);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents()
    {

        this.connectionLabel = new javax.swing.JLabel();
        this.connection = new javax.swing.JTextField();
        this.inboundLabel = new javax.swing.JLabel();
        this.inbound = new javax.swing.JTextField();
        this.outboundLabel = new javax.swing.JLabel();
        this.outbound = new javax.swing.JTextField();
        this.errorLabel = new javax.swing.JLabel();
        this.error = new javax.swing.JTextField();
        this.refresh = new javax.swing.JButton();
        this.shutDown = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        this.connectionLabel.setText("Connections:");
        this.inboundLabel.setText("Inbound:");
        this.outboundLabel.setText("Outbound:");
        this.errorLabel.setText("Error:");
        this.refresh.setText("Refresh");
        this.refresh.addActionListener((java.awt.event.ActionEvent evt) ->
        {
            refreshActionPerformed(evt);
        });

        this.shutDown.setText("Shut Down");
        this.shutDown.addActionListener((java.awt.event.ActionEvent evt) ->
        {
            shutDownActionPerformed(evt);
        });

        HostMonitorFrame.initTextField(this.connection, "connection");
        HostMonitorFrame.initTextField(this.inbound, "inbound");
        HostMonitorFrame.initTextField(this.outbound, "outbound");
        HostMonitorFrame.initTextField(this.error, "error");


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(this.refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(this.shutDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(errorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(outboundLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outbound, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(connectionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(connection, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(inboundLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inbound, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectionLabel)
                    .addComponent(connection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inboundLabel)
                    .addComponent(inbound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outboundLabel)
                    .addComponent(outbound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errorLabel)
                    .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refresh)
                    .addComponent(this.shutDown))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    private static void initTextField(JTextField textField, String name)
    {
        textField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField.setText("0");
        textField.setToolTipText("");
        textField.setEnabled(false);
        textField.setName(name);
    }

    private void refreshActionPerformed(java.awt.event.ActionEvent evt)
    {
        // all I want is the refresh button
        System.out.println(evt.getActionCommand());
    }

    private void shutDownActionPerformed(ActionEvent evt)
    {
        this.host.closeAndExit();
    }

}
