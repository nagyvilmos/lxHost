annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.desc=Lexa Host Server
application.title=lxHost
application.vendor=William Norman-Walker
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/lxHost.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.lxComms.jar=${lexa.core.bin.dir}\\lxComms.jar
file.reference.lxData.jar=${lexa.core.bin.dir}\\lxData.jar
file.reference.lxExpression.jar=${lexa.core.bin.dir}\\lxExpression.jar
file.reference.lxLogging.jar=${lexa.core.bin.dir}\\lxLogging.jar
file.reference.lxProcess.jar=C:\\Users\\william\\Documents\\Lexa\\core\\bin\\lxProcess.jar
file.reference.lxQueue.jar=${lexa.core.bin.dir}\\lxQueue.jar
file.reference.lxServer.jar=${lexa.core.bin.dir}\\lxServer.jar
file.reference.lxTest.jar=C:\\Users\\william\\Documents\\Lexa\\core\\bin\\lxTest.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.lxQueue.jar}:\
    ${file.reference.lxData.jar}:\
    ${file.reference.lxServer.jar}:\
    ${file.reference.lxLogging.jar}:\
    ${file.reference.lxComms.jar}:\
    ${file.reference.lxExpression.jar}:\
    ${file.reference.lxTest.jar}:\
    ${file.reference.lxProcess.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=true
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=true
javadoc.splitindex=true
javadoc.use=true
javadoc.version=true
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=lxhost.HostApp
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test

#lexa bits:
lexa.core.bin.dir=../../../lexa/core/bin
